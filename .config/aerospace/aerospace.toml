# jacob curlin
# aerospace 

[key-mapping]
preset = 'qwerty'
# start aerospace at login
start-at-login = true

# on aerospace startup
after-startup-command = [
    'workspace 1', 'layout h_accordion horizontal',
    'workspace 2', 'layout h_accordion horizontal',
]

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# accordion-mode padding
accordion-padding = 30

# mouse follows focus when focused monitor changes
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# you can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
automatically-unhide-macos-hidden-apps = false

# gaps between windows (inner-*) and between monitor edges (outer-*).
[gaps]
inner.horizontal = 4
inner.vertical =   4
outer.left =       4
outer.bottom =     4
outer.top =        4
outer.right =      4

# 'main' binding mode declaration
[mode.main.binding]

# open up terminal with alt + enter shortcut (like in i3)
alt-enter = '''exec-and-forget osascript -e '
tell application "Terminal"
    do script
    activate
end tell'
'''

# layout
ctrl-cmd-slash = 'layout tiles horizontal vertical'
ctrl-cmd-comma = 'layout accordion horizontal vertical'

# focus node
ctrl-cmd-h = 'focus left --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'
ctrl-cmd-j = 'focus down --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'
ctrl-cmd-k = 'focus up --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'
ctrl-cmd-l = 'focus right --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'

# move node
ctrl-alt-h = 'move left'
ctrl-alt-j = 'move down'
ctrl-alt-k = 'move up'
ctrl-alt-l = 'move right'

# resize node
ctrl-alt-minus = 'resize smart -50'
ctrl-alt-equal = 'resize smart +50'

# focus workspace
ctrl-cmd-u = 'workspace 1'
ctrl-cmd-i = 'workspace 2'
ctrl-cmd-o = 'workspace 3'
ctrl-cmd-p = 'workspace 4'

# move node to workspace
ctrl-alt-u = 'move-node-to-workspace 1'
ctrl-alt-i = 'move-node-to-workspace 2'
ctrl-alt-o = 'move-node-to-workspace 3'
ctrl-alt-p = 'move-node-to-workspace 4'

# forced workspace-monitor assignments {main:1,2} , {secondary: 3,4}
[workspace-to-monitor-force-assignment]
    1 = 'main'
    2 = 'main'
    3 = ['secondary', 'main']
    4 = ['secondary', 'main']


# workspace back-and-forth
cmd-tab = 'workspace-back-and-forth'

# move workspace to monitor
# alt-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']
